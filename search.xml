<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS进阶学习DAY1</title>
    <url>/2023/07/29/JS%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0DAY1/</url>
    <content><![CDATA[<h1 id="JavaScript-进阶-第1天"><a href="#JavaScript-进阶-第1天" class="headerlink" title="JavaScript 进阶 - 第1天"></a>JavaScript 进阶 - 第1天</h1><blockquote>
<p>​		本文是在学习作用域、变量提升、闭包等语言特征，为加深对 JavaScript 的理解，掌握变量赋值、函数声明的简洁语法，降低代码冗余度做的笔记。</p>
</blockquote>
<ul>
<li>理解作用域对程序执行的影响</li>
<li>能够分析程序执行的作用域范围</li>
<li>理解闭包本质，利用闭包创建隔离作用域</li>
<li>了解什么变量提升及函数提升</li>
<li>掌握箭头函数、解析剩余参数等简洁语法</li>
</ul>
<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><blockquote>
<p>了解作用域对程序执行的影响及作用域链的查找机制，使用闭包函数创建隔离作用域避免全局变量污染。</p>
</blockquote>
<p>作用域（scope）规定了变量能够被访问的“范围”，离开了这个“范围”变量便不能被访问，作用域分为全局作用域和局部作用域。</p>
<h3 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h3><p>局部作用域分为函数作用域和块作用域。</p>
<h4 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h4><p>在函数内部声明的变量只能在函数内部被访问，外部无法直接访问。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 声明 counter 函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">counter</span>(<span class="hljs-params">x, y</span>) &#123;<br>    <span class="hljs-comment">// 函数内部声明的变量</span><br>    <span class="hljs-keyword">const</span> s = x + y<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s) <span class="hljs-comment">// 18</span><br>  &#125;<br>  <span class="hljs-comment">// 设用 counter 函数</span><br>  <span class="hljs-title function_">counter</span>(<span class="hljs-number">10</span>, <span class="hljs-number">8</span>)<br>  <span class="hljs-comment">// 访问变量 s</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s)<span class="hljs-comment">// 报错</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>函数内部声明的变量，在函数外部无法被访问</li>
<li>函数的参数也是函数内部的局部变量</li>
<li>不同函数内部声明的变量无法互相访问</li>
<li>函数执行完毕后，函数内部的变量实际被清空了</li>
</ol>
<h4 id="块作用域"><a href="#块作用域" class="headerlink" title="块作用域"></a>块作用域</h4><p>在 JavaScript 中使用 <code>&#123;&#125;</code> 包裹的代码称为代码块，代码块内部声明的变量外部将【有可能】无法被访问。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  &#123;<br>    <span class="hljs-comment">// age 只能在该代码块中被访问</span><br>    <span class="hljs-keyword">let</span> age = <span class="hljs-number">18</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age); <span class="hljs-comment">// 正常</span><br>  &#125;<br>  <br>  <span class="hljs-comment">// 超出了 age 的作用域</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age) <span class="hljs-comment">// 报错</span><br>  <br>  <span class="hljs-keyword">let</span> flag = <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">if</span>(flag) &#123;<br>    <span class="hljs-comment">// str 只能在该代码块中被访问</span><br>    <span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;hello world!&#x27;</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str); <span class="hljs-comment">// 正常</span><br>  &#125;<br>  <br>  <span class="hljs-comment">// 超出了 age 的作用域</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str); <span class="hljs-comment">// 报错</span><br>  <br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> t = <span class="hljs-number">1</span>; t &lt;= <span class="hljs-number">6</span>; t++) &#123;<br>    <span class="hljs-comment">// t 只能在该代码块中被访问</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(t); <span class="hljs-comment">// 正常</span><br>  &#125;<br>  <br>  <span class="hljs-comment">// 超出了 t 的作用域</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(t); <span class="hljs-comment">// 报错</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>JavaScript 中除了变量外还有常量，常量与变量本质的区别是【常量必须要有值且不允许被重新赋值】，常量值为对象时其属性和方法允许重新赋值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">&lt;script&gt;<br>  <span class="hljs-comment">// 必须要有值</span><br>  <span class="hljs-type">const</span> <span class="hljs-variable">version</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;1.0.0&#x27;</span>;<br><br>  <span class="hljs-comment">// 不能重新赋值</span><br>  <span class="hljs-comment">// version = &#x27;1.0.1&#x27;;</span><br><br>  <span class="hljs-comment">// 常量值为对象类型</span><br>  <span class="hljs-type">const</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> &#123;<br>    name: <span class="hljs-string">&#x27;小明&#x27;</span>,<br>    age: <span class="hljs-number">18</span><br>  &#125;<br><br>  <span class="hljs-comment">// 不能重新赋值</span><br>  user = &#123;&#125;;<br><br>  <span class="hljs-comment">// 属性和方法允许被修改</span><br>  user.name = <span class="hljs-string">&#x27;小小明&#x27;</span>;<br>  user.gender = <span class="hljs-string">&#x27;男&#x27;</span>;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>let</code> 声明的变量会产生块作用域，<code>var</code> 不会产生块作用域</li>
<li><code>const</code> 声明的常量也会产生块作用域</li>
<li>不同代码块之间的变量无法互相访问</li>
<li>推荐使用 <code>let</code> 或 <code>const</code></li>
</ol>
<p>注：开发中 <code>let</code> 和 <code>const</code> 经常不加区分的使用，如果担心某个值会不小被修改时，则只能使用 <code>const</code> 声明成常量。</p>
<h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 此处是全局</span><br>  <br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 此处为局部</span><br>  &#125;<br><br>  <span class="hljs-comment">// 此处为全局</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>全局作用域中声明的变量，任何其它作用域都可以被访问，如下代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 全局变量 name</span><br>    <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;小明&#x27;</span><br>  <br>  	<span class="hljs-comment">// 函数作用域中访问全局</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 此处为局部</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;你好&#x27;</span> + name)<br>    &#125;<br><br>    <span class="hljs-comment">// 全局变量 flag 和 x</span><br>    <span class="hljs-keyword">const</span> flag = <span class="hljs-literal">true</span><br>    <span class="hljs-keyword">let</span> x = <span class="hljs-number">10</span><br>  <br>  	<span class="hljs-comment">// 块作用域中访问全局</span><br>    <span class="hljs-keyword">if</span>(flag) &#123;<br>      <span class="hljs-keyword">let</span> y = <span class="hljs-number">5</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x + y) <span class="hljs-comment">// x 是全局的</span><br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>为 <code>window</code> 对象动态添加的属性默认也是全局的，不推荐！</li>
<li>函数中未使用任何关键字声明的变量为全局变量，不推荐！！！</li>
<li>尽可能少的声明全局变量，防止全局变量被污染</li>
</ol>
<p>JavaScript 中的作用域是程序被执行时的底层机制，了解这一机制有助于规范代码书写习惯，避免因作用域导致的语法错误。</p>
<h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>在解释什么是作用域链前先来看一段代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 全局作用域</span><br>  <span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span><br>  <span class="hljs-keyword">let</span> b = <span class="hljs-number">2</span><br>  <span class="hljs-comment">// 局部作用域</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> c<br>    <span class="hljs-comment">// 局部作用域</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">let</span> d = <span class="hljs-string">&#x27;yo&#x27;</span><br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>函数内部允许创建新的函数，<code>f</code> 函数内部创建的新函数 <code>g</code>，会产生新的函数作用域，由此可知作用域产生了嵌套的关系。</p>
<p>如下图所示，父子关系的作用域关联在一起形成了链状的结构，作用域链的名字也由此而来。</p>
<p>作用域链本质上是底层的变量查找机制，在函数被执行时，会优先查找当前函数作用域中查找变量，如果当前作用域查找不到则会依次逐级查找父级作用域直到全局作用域，如下代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 全局作用域</span><br>  <span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span><br>  <span class="hljs-keyword">let</span> b = <span class="hljs-number">2</span><br><br>  <span class="hljs-comment">// 局部作用域</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> c<br>    <span class="hljs-comment">// let a = 10;</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a) <span class="hljs-comment">// 1 或 10</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d) <span class="hljs-comment">// 报错</span><br>    <br>    <span class="hljs-comment">// 局部作用域</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">let</span> d = <span class="hljs-string">&#x27;yo&#x27;</span><br>      <span class="hljs-comment">// let b = 20;</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b) <span class="hljs-comment">// 2 或 20</span><br>    &#125;<br>    <br>    <span class="hljs-comment">// 调用 g 函数</span><br>    <span class="hljs-title function_">g</span>()<br>  &#125;<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c) <span class="hljs-comment">// 报错</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d) <span class="hljs-comment">// 报错</span><br>  <br>  <span class="hljs-title function_">f</span>();<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>嵌套关系的作用域串联起来形成了作用域链</li>
<li>相同作用域链中按着从小到大的规则查找变量</li>
<li>子作用域能够访问父作用域，父级作用域无法访问子级作用域</li>
</ol>
<h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>闭包是一种比较特殊和函数，使用闭包能够访问函数作用域中的变量。从代码形式上看闭包是一个做为返回值的函数，如下代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 1. 闭包 : 内层函数 + 外层函数变量</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// function outer() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   const a = 1</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   function f() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//     console.log(a)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   f()</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// outer()</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 2. 闭包的应用： 实现数据的私有。统计函数的调用次数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// let count = 1</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// function fn() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   count++</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(`函数被调用$&#123;count&#125;次`)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 3. 闭包的写法  统计函数的调用次数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">outer</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">let</span> count = <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        count++</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`函数被调用<span class="hljs-subst">$&#123;count&#125;</span>次`</span>)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> fn</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> re = <span class="hljs-title function_">outer</span>()</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const re = function fn() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   count++</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(`函数被调用$&#123;count&#125;次`)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">re</span>()</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">re</span>()</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = function() &#123; &#125;  函数表达式</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 4. 闭包存在的问题： 可能会造成内存泄漏</span></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<p>1.怎么理解闭包？</p>
<ul>
<li>闭包 &#x3D; 内层函数 + 外层函数的变量</li>
</ul>
<p>2.闭包的作用？</p>
<ul>
<li>封闭数据，实现数据私有，外部也可以访问函数内部的变量</li>
<li>闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来</li>
</ul>
<p>3.闭包可能引起的问题？</p>
<ul>
<li>内存泄漏</li>
</ul>
<h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>变量提升是 JavaScript 中比较“奇怪”的现象，它允许在变量声明之前即被访问，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 访问变量 str</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str + <span class="hljs-string">&#x27;world!&#x27;</span>);<br><br>  <span class="hljs-comment">// 声明变量 str</span><br>  <span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;hello &#x27;</span>;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>变量在未声明即被访问时会报语法错误</li>
<li>变量在声明之前即被访问，变量的值为 <code>undefined</code></li>
<li><code>let</code> 声明的变量不存在变量提升，推荐使用 <code>let</code></li>
<li>变量提升出现在相同作用域当中</li>
<li>实际开发中推荐先声明再访问变量</li>
</ol>
<p>注：关于变量提升的原理分析会涉及较为复杂的词法分析等知识，而开发中使用 <code>let</code> 可以轻松规避变量的提升，因此在此不做过多的探讨，有兴趣可<a href="https://segmentfault.com/a/1190000013915935">查阅资料</a>。</p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote>
<p>知道函数参数默认值、动态参数、剩余参数的使用细节，提升函数应用的灵活度，知道箭头函数的语法及与普通函数的差异。</p>
</blockquote>
<h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p>函数提升与变量提升比较类似，是指函数在声明之前即可被调用。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 调用函数</span><br>  <span class="hljs-title function_">foo</span>()<br>  <span class="hljs-comment">// 声明函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;声明之前即被调用...&#x27;</span>)<br>  &#125;<br><br>  <span class="hljs-comment">// 不存在提升现象</span><br>  <span class="hljs-title function_">bar</span>()  <span class="hljs-comment">// 错误</span><br>  <span class="hljs-keyword">var</span> bar = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;函数表达式不存在提升现象...&#x27;</span>)<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>函数提升能够使函数的声明调用更灵活</li>
<li>函数表达式不存在提升的现象</li>
<li>函数提升出现在相同作用域当中</li>
</ol>
<h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><p>函数参数的使用细节，能够提升函数应用的灵活度。</p>
<h4 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 设置参数默认值</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params">name=<span class="hljs-string">&quot;小明&quot;</span>, age=<span class="hljs-number">18</span></span>) &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">`&lt;p&gt;大家好，我叫<span class="hljs-subst">$&#123;name&#125;</span>，我今年<span class="hljs-subst">$&#123;age&#125;</span>岁了。&lt;/p&gt;`</span>);<br>  &#125;<br>  <span class="hljs-comment">// 调用函数</span><br>  <span class="hljs-title function_">sayHi</span>();<br>  <span class="hljs-title function_">sayHi</span>(<span class="hljs-string">&#x27;小红&#x27;</span>);<br>  <span class="hljs-title function_">sayHi</span>(<span class="hljs-string">&#x27;小刚&#x27;</span>, <span class="hljs-number">21</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>声明函数时为形参赋值即为参数的默认值</li>
<li>如果参数未自定义默认值时，参数的默认值为 <code>undefined</code></li>
<li>调用函数时没有传入对应实参时，参数的默认值被当做实参传入</li>
</ol>
<h4 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h4><p><code>arguments</code> 是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 求生函数，计算所有参数的和</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// console.log(arguments)</span><br>    <span class="hljs-keyword">let</span> s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>; i++) &#123;<br>      s += <span class="hljs-variable language_">arguments</span>[i]<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s)<br>  &#125;<br>  <span class="hljs-comment">// 调用求和函数</span><br>  <span class="hljs-title function_">sum</span>(<span class="hljs-number">5</span>, <span class="hljs-number">10</span>)<span class="hljs-comment">// 两个参数</span><br>  <span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>) <span class="hljs-comment">// 两个参数</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>arguments</code> 是一个伪数组</li>
<li><code>arguments</code> 的作用是动态获取函数的实参</li>
</ol>
<h4 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">config</span>(<span class="hljs-params">baseURL, ...other</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(baseURL) <span class="hljs-comment">// 得到 &#x27;http://baidu.com&#x27;</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(other)  <span class="hljs-comment">// other  得到 [&#x27;get&#x27;, &#x27;json&#x27;]</span><br>  &#125;<br>  <span class="hljs-comment">// 调用函数</span><br>  <span class="hljs-title function_">config</span>(<span class="hljs-string">&#x27;http://baidu.com&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;json&#x27;</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>...</code> 是语法符号，置于最末函数形参之前，用于获取多余的实参</li>
<li>借助 <code>...</code> 获取的剩余实参，是个真数组</li>
</ol>
<h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数是一种声明函数的简洁语法，它与普通函数并无本质的区别，差异性更多体现在语法格式上。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = function () &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(123)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 1. 箭头函数 基本语法</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = () =&gt; &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(123)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// fn()</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = (x) =&gt; &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(x)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// fn(1)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 2. 只有一个形参的时候，可以省略小括号</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = x =&gt; &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   console.log(x)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// fn(1)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// // 3. 只有一行代码的时候，我们可以省略大括号</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = x =&gt; console.log(x)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// fn(1)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 4. 只有一行代码的时候，可以省略return</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = x =&gt; x + x</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// console.log(fn(1))</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 5. 箭头函数可以直接返回一个对象</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const fn = (uname) =&gt; (&#123; uname: uname &#125;)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// console.log(fn(&#x27;刘德华&#x27;))</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>箭头函数属于表达式函数，因此不存在函数提升</li>
<li>箭头函数只有一个参数时可以省略圆括号 <code>()</code></li>
<li>箭头函数函数体只有一行代码时可以省略花括号 <code>&#123;&#125;</code>，并自动做为返回值被返回</li>
</ol>
<h4 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h4><p>箭头函数中没有 <code>arguments</code>，只能使用 <code>...</code> 动态获取实参</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 1. 利用箭头函数来求和</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">getSum</span> = (<span class="hljs-params">...arr</span>) =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        sum += arr[i]</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> sum</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">getSum</span>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result) <span class="hljs-comment">// 9</span></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure>

<h4 id="箭头函数-this"><a href="#箭头函数-this" class="headerlink" title="箭头函数 this"></a>箭头函数 this</h4><p>箭头函数不会创建自己的this,它只会从自己的作用域链的上一层沿用this。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>   <span class="hljs-comment">// 以前this的指向：  谁调用的这个函数，this 就指向谁</span><br>   <span class="hljs-comment">// console.log(this)  // window</span><br>   <span class="hljs-comment">// // 普通函数</span><br>   <span class="hljs-comment">// function fn() &#123;</span><br>   <span class="hljs-comment">//   console.log(this)  // window</span><br>   <span class="hljs-comment">// &#125;</span><br>   <span class="hljs-comment">// window.fn()</span><br>   <span class="hljs-comment">// // 对象方法里面的this</span><br>   <span class="hljs-comment">// const obj = &#123;</span><br>   <span class="hljs-comment">//   name: &#x27;andy&#x27;,</span><br>   <span class="hljs-comment">//   sayHi: function () &#123;</span><br>   <span class="hljs-comment">//     console.log(this)  // obj</span><br>   <span class="hljs-comment">//   &#125;</span><br>   <span class="hljs-comment">// &#125;</span><br>   <span class="hljs-comment">// obj.sayHi()</span><br><br>   <span class="hljs-comment">// 2. 箭头函数的this  是上一层作用域的this 指向</span><br>   <span class="hljs-comment">// const fn = () =&gt; &#123;</span><br>   <span class="hljs-comment">//   console.log(this)  // window</span><br>   <span class="hljs-comment">// &#125;</span><br>   <span class="hljs-comment">// fn()</span><br>   <span class="hljs-comment">// 对象方法箭头函数 this</span><br>   <span class="hljs-comment">// const obj = &#123;</span><br>   <span class="hljs-comment">//   uname: &#x27;pink老师&#x27;,</span><br>   <span class="hljs-comment">//   sayHi: () =&gt; &#123;</span><br>   <span class="hljs-comment">//     console.log(this)  // this 指向谁？ window</span><br>   <span class="hljs-comment">//   &#125;</span><br>   <span class="hljs-comment">// &#125;</span><br>   <span class="hljs-comment">// obj.sayHi()</span><br><br>   <span class="hljs-keyword">const</span> obj = &#123;<br>     <span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;pink老师&#x27;</span>,<br>     <span class="hljs-attr">sayHi</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)  <span class="hljs-comment">// obj</span><br>       <span class="hljs-keyword">let</span> i = <span class="hljs-number">10</span><br>       <span class="hljs-keyword">const</span> <span class="hljs-title function_">count</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>         <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)  <span class="hljs-comment">// obj </span><br>       &#125;<br>       <span class="hljs-title function_">count</span>()<br>     &#125;<br>   &#125;<br>   obj.<span class="hljs-title function_">sayHi</span>()<br><br> &lt;/script&gt;<br></code></pre></td></tr></table></figure>

<h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><blockquote>
<p>知道解构的语法及分类，使用解构简洁语法快速为变量赋值。</p>
</blockquote>
<p>解构赋值是一种快速为变量赋值的简洁语法，本质上仍然是为变量赋值，分为数组解构、对象解构两大类型。</p>
<h3 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h3><p>数组解构是将数组的单元值快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 普通的数组</span><br>  <span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>  <span class="hljs-comment">// 批量声明变量 a b c </span><br>  <span class="hljs-comment">// 同时将数组单元值 1 2 3 依次赋值给变量 a b c</span><br>  <span class="hljs-keyword">let</span> [a, b, c] = arr<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a); <span class="hljs-comment">// 1</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b); <span class="hljs-comment">// 2</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c); <span class="hljs-comment">// 3</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>赋值运算符 <code>=</code> 左侧的 <code>[]</code> 用于批量声明变量，右侧数组的单元值将被赋值给左侧的变量</li>
<li>变量的顺序对应数组单元值的位置依次进行赋值操作</li>
<li>变量的数量大于单元值数量时，多余的变量将被赋值为 <code>undefined</code></li>
<li>变量的数量小于单元值数量时，可以通过 <code>...</code> 获取剩余单元值，但只能置于最末位</li>
<li>允许初始化变量的默认值，且只有单元值为 <code>undefined</code> 时默认值才会生效</li>
</ol>
<p>注：支持多维解构赋值，比较复杂后续有应用需求时再进一步分析</p>
<h3 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3><p>对象解构是将对象属性和方法快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 普通对象</span><br>  <span class="hljs-keyword">const</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;小明&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span><br>  &#125;;<br>  <span class="hljs-comment">// 批量声明变量 name age</span><br>  <span class="hljs-comment">// 同时将数组单元值 小明  18 依次赋值给变量 name  age</span><br>  <span class="hljs-keyword">const</span> &#123;name, age&#125; = user<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name) <span class="hljs-comment">// 小明</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age) <span class="hljs-comment">// 18</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>赋值运算符 <code>=</code> 左侧的 <code>&#123;&#125;</code> 用于批量声明变量，右侧对象的属性值将被赋值给左侧的变量</li>
<li>对象属性的值将被赋值给与属性名相同的变量</li>
<li>对象中找不到与变量名一致的属性时变量值为 <code>undefined</code></li>
<li>允许初始化变量的默认值，属性不存在或单元值为 <code>undefined</code> 时默认值才会生效</li>
</ol>
<p>注：支持多维解构赋值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 1. 这是后台传递过来的数据</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> msg = &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-number">200</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;获取新闻列表成功&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-string">&quot;data&quot;</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">        &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;5G商用自己，三大运用商收入下降&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">58</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">2</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;国际媒体头条速览&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">56</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;乌克兰和俄罗斯持续冲突&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">1669</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">      ]</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 需求1： 请将以上msg对象  采用对象解构的方式 只选出  data 方面后面使用渲染页面</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const &#123; data &#125; = msg</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// console.log(data)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 需求2： 上面msg是后台传递过来的数据，我们需要把data选出当做参数传递给 函数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const &#123; data &#125; = msg</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// msg 虽然很多属性，但是我们利用解构只要 data值</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params">&#123; data &#125;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// const &#123; data &#125; = arr</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 我们只要 data 数据</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 内部处理</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">render</span>(msg)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 需求3， 为了防止msg里面的data名字混淆，要求渲染函数里面的数据名改为 myData</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params">&#123; data: myData &#125;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 要求将 获取过来的 data数据 更名为 myData</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 内部处理</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(myData)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">render</span>(msg)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure>

<h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="forEach遍历数组"><a href="#forEach遍历数组" class="headerlink" title="forEach遍历数组"></a>forEach遍历数组</h3><p>forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数</p>
<blockquote>
<p>注意：</p>
<p>1.forEach 主要是遍历数组</p>
<p>2.参数当前数组元素是必须要写的， 索引号可选。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// forEach 就是遍历  加强版的for循环  适合于遍历数组对象</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;red&#x27;</span>, <span class="hljs-string">&#x27;green&#x27;</span>, <span class="hljs-string">&#x27;pink&#x27;</span>]</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> result = arr.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">item, index</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(item)  <span class="hljs-comment">// 数组元素 red  green pink</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(index) <span class="hljs-comment">// 索引号</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// console.log(result)</span></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure>

<h3 id="filter筛选数组"><a href="#filter筛选数组" class="headerlink" title="filter筛选数组"></a>filter筛选数组</h3><p>filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素</p>
<p>主要使用场景： 筛选数组符合条件的元素，并返回筛选之后元素的新数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>]</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// const newArr = arr.filter(function (item, index) &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   // console.log(item)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   // console.log(index)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">//   return item &gt;= 20</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// &#125;)</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 返回的符合条件的新数组</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> newArr = arr.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item &gt;= <span class="hljs-number">20</span>)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr)</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端知识</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>JS进阶学习DAY2</title>
    <url>/2023/07/30/JS%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0DAY2/</url>
    <content><![CDATA[<h1 id="JavaScript-进阶-第2天"><a href="#JavaScript-进阶-第2天" class="headerlink" title="JavaScript 进阶 - 第2天"></a>JavaScript 进阶 - 第2天</h1><blockquote>
<p>​	本文是在了解面向对象编程的基础概念及构造函数的作用，体会 JavaScript 一切皆对象的语言特征，掌握常见的对象属性和方法的使用做的笔记。</p>
</blockquote>
<ul>
<li>了解面向对象编程中的一般概念</li>
<li>能够基于构造函数创建对象</li>
<li>理解 JavaScript 中一切皆对象的语言特征</li>
<li>理解引用对象类型值存储的的特征</li>
<li>掌握包装类型对象常见方法的使用</li>
</ul>
<h2 id="深入对象"><a href="#深入对象" class="headerlink" title="深入对象"></a>深入对象</h2><blockquote>
<p>了解面向对象的基础概念，能够利用构造函数创建对象。</p>
</blockquote>
<h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>构造函数是专门用于创建对象的函数，如果一个函数使用 <code>new</code> 关键字调用，那么这个函数就是构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 定义函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;通过 new 也能调用函数...&#x27;</span>);<br>  &#125;<br>  <span class="hljs-comment">// 调用函数</span><br>  <span class="hljs-keyword">new</span> foo;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>使用 <code>new</code> 关键字调用函数的行为被称为实例化</li>
<li>实例化构造函数时没有参数时可以省略 <code>()</code></li>
<li>构造函数的返回值即为新创建的对象</li>
<li>构造函数内部的 <code>return</code> 返回的值无效！</li>
</ol>
<p>注：实践中为了从视觉上区分构造函数和普通函数，习惯将构造函数的首字母大写。</p>
<h3 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h3><p>通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 构造函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">Person</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 构造函数内部的 this 就是实例对象</span><br>    <span class="hljs-comment">// 实例对象中动态添加属性</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;小明&#x27;</span><br>    <span class="hljs-comment">// 实例对象动态添加方法</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;大家好~&#x27;</span>)<br>    &#125;<br>  &#125;<br>  <span class="hljs-comment">// 实例化，p1 是实例对象</span><br>  <span class="hljs-comment">// p1 实际就是 构造函数内部的 this</span><br>  <span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>()<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p1)<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p1.<span class="hljs-property">name</span>) <span class="hljs-comment">// 访问实例属性</span><br>  p1.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">// 调用实例方法</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>构造函数内部 <code>this</code> 实际上就是实例对象，为其动态添加的属性和方法即为实例成员</li>
<li>为构造函数传入参数，动态创建结构相同但值不同的对象</li>
</ol>
<p>注：构造函数创建的实例对象彼此独立互不影响。</p>
<h3 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h3><p>在 JavaScript 中底层函数本质上也是对象类型，因此允许直接为函数动态添加属性或方法，构造函数的属性和方法被称为静态成员。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 构造函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">Person</span>(<span class="hljs-params">name, age</span>) &#123;<br>    <span class="hljs-comment">// 省略实例成员</span><br>  &#125;<br>  <span class="hljs-comment">// 静态属性</span><br>  <span class="hljs-title class_">Person</span>.<span class="hljs-property">eyes</span> = <span class="hljs-number">2</span><br>  <span class="hljs-title class_">Person</span>.<span class="hljs-property">arms</span> = <span class="hljs-number">2</span><br>  <span class="hljs-comment">// 静态方法</span><br>  <span class="hljs-title class_">Person</span>.<span class="hljs-property">walk</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;^_^人都会走路...&#x27;</span>)<br>    <span class="hljs-comment">// this 指向 Person</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">eyes</span>)<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>静态成员指的是添加到构造函数本身的属性和方法</li>
<li>一般公共特征的属性或方法静态成员设置为静态成员</li>
<li>静态成员方法中的 <code>this</code> 指向构造函数本身</li>
</ol>
<h2 id="内置构造函数"><a href="#内置构造函数" class="headerlink" title="内置构造函数"></a>内置构造函数</h2><blockquote>
<p>掌握各引用类型和包装类型对象属性和方法的使用。</p>
</blockquote>
<p>在 JavaScript 中<strong>最主要</strong>的数据类型有 6 种，分别是字符串、数值、布尔、undefined、null 和 对象，常见的对象类型数据包括数组和普通对象。其中字符串、数值、布尔、undefined、null 也被称为简单类型或基础类型，对象也被称为引用类型。</p>
<p>在 JavaScript 内置了一些构造函数，绝大部的数据处理都是基于这些构造函数实现的，JavaScript 基础阶段学习的 <code>Date</code> 就是内置的构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 实例化</span><br>	<span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  <br>  <span class="hljs-comment">// date 即为实例对象</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(date);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>甚至字符串、数值、布尔、数组、普通对象也都有专门的构造函数，用于创建对应类型的数据。</p>
<h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><p><code>Object</code> 是内置的构造函数，用于创建普通对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 通过构造函数创建普通对象</span><br>  <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>(&#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;小明&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">15</span>&#125;)<br><br>  <span class="hljs-comment">// 这种方式声明的变量称为【字面量】</span><br>  <span class="hljs-keyword">let</span> student = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;杜子腾&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>&#125;<br>  <br>  <span class="hljs-comment">// 对象语法简写</span><br>  <span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;小红&#x27;</span>;<br>  <span class="hljs-keyword">let</span> people = &#123;<br>    <span class="hljs-comment">// 相当于 name: name</span><br>    name,<br>    <span class="hljs-comment">// 相当于 walk: function () &#123;&#125;</span><br>    walk () &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;人都要走路...&#x27;</span>);<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(student.<span class="hljs-property">constructor</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-property">constructor</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(student <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Object</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>。</p>
<p>总结：</p>
<ol>
<li>推荐使用字面量方式声明对象，而不是 <code>Object</code> 构造函数</li>
<li><code>Object.assign</code> 静态方法创建新的对象</li>
<li><code>Object.keys</code> 静态方法获取对象中所有属性</li>
<li><code>Object.values</code> 表态方法获取对象中所有属性值</li>
</ol>
<h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p><code>Array</code> 是内置的构造函数，用于创建数组。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 构造函数创建数组</span><br>  <span class="hljs-keyword">let</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>);<br><br>  <span class="hljs-comment">// 字面量方式创建数组</span><br>  <span class="hljs-keyword">let</span> list = [<span class="hljs-string">&#x27;html&#x27;</span>, <span class="hljs-string">&#x27;css&#x27;</span>, <span class="hljs-string">&#x27;javascript&#x27;</span>]<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>数组赋值后，无论修改哪个变量另一个对象的数据值也会相当发生改变。</p>
<p>总结：</p>
<ol>
<li><p>推荐使用字面量方式声明数组，而不是 <code>Array</code> 构造函数</p>
</li>
<li><p>实例方法 <code>forEach</code> 用于遍历数组，替代 <code>for</code> 循环 (重点)</p>
</li>
<li><p>实例方法 <code>filter</code> 过滤数组单元值，生成新数组(重点)</p>
</li>
<li><p>实例方法 <code>map</code> 迭代原数组，生成新数组(重点)</p>
</li>
<li><p>实例方法 <code>join</code> 数组元素拼接为字符串，返回字符串(重点)</p>
</li>
<li><p>实例方法 <code>find</code> 查找元素， 返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)</p>
</li>
<li><p>实例方法<code>every</code> 检测数组所有元素是否都符合指定条件，如果<strong>所有元素</strong>都通过检测返回 true，否则返回 false(重点)</p>
</li>
<li><p>实例方法<code>some</code> 检测数组中的元素是否满足指定条件 <strong>如果数组中有</strong>元素满足条件返回 true，否则返回 false</p>
</li>
<li><p>实例方法 <code>concat</code> 合并两个数组，返回生成新数组</p>
</li>
<li><p>实例方法 <code>sort</code> 对原数组单元值排序</p>
</li>
<li><p>实例方法 <code>splice</code> 删除或替换原数组单元</p>
</li>
<li><p>实例方法 <code>reverse</code> 反转数组</p>
</li>
<li><p>实例方法 <code>findIndex</code> 查找元素的索引值</p>
</li>
</ol>
<h3 id="包装类型"><a href="#包装类型" class="headerlink" title="包装类型"></a>包装类型</h3><p>在 JavaScript 中的字符串、数值、布尔具有对象的使用特征，如具有属性和方法，如下代码举例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 字符串类型</span><br>  <span class="hljs-keyword">const</span> str = <span class="hljs-string">&#x27;hello world!&#x27;</span><br> 	<span class="hljs-comment">// 统计字符的长度（字符数量）</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-property">length</span>)<br>  <br>  <span class="hljs-comment">// 数值类型</span><br>  <span class="hljs-keyword">const</span> price = <span class="hljs-number">12.345</span><br>  <span class="hljs-comment">// 保留两位小数</span><br>  price.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>) <span class="hljs-comment">// 12.34</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>之所以具有对象特征的原因是字符串、数值、布尔类型数据是 JavaScript 底层使用 Object 构造函数“包装”来的，被称为包装类型。</p>
<h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p><code>String</code> 是内置的构造函数，用于创建字符串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 使用构造函数创建字符串</span><br>  <span class="hljs-keyword">let</span> str = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&#x27;hello world!&#x27;</span>);<br><br>  <span class="hljs-comment">// 字面量创建字符串</span><br>  <span class="hljs-keyword">let</span> str2 = <span class="hljs-string">&#x27;你好，世界！&#x27;</span>;<br><br>  <span class="hljs-comment">// 检测是否属于同一个构造函数</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-property">constructor</span> === str2.<span class="hljs-property">constructor</span>); <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">String</span>); <span class="hljs-comment">// false</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>实例属性 <code>length</code> 用来获取字符串的度长(重点)</li>
<li>实例方法 <code>split(&#39;分隔符&#39;)</code> 用来将字符串拆分成数组(重点)</li>
<li>实例方法 <code>substring（需要截取的第一个字符的索引[,结束的索引号]）</code> 用于字符串截取(重点)</li>
<li>实例方法 <code>startsWith(检测字符串[, 检测位置索引号])</code> 检测是否以某字符开头(重点)</li>
<li>实例方法 <code>includes(搜索的字符串[, 检测位置索引号])</code> 判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false(重点)</li>
<li>实例方法 <code>toUpperCase</code> 用于将字母转换成大写</li>
<li>实例方法 <code>toLowerCase</code> 用于将就转换成小写</li>
<li>实例方法 <code>indexOf</code> 检测是否包含某字符</li>
<li>实例方法 <code>endsWith</code> 检测是否以某字符结尾</li>
<li>实例方法 <code>replace</code> 用于替换字符串，支持正则匹配</li>
<li>实例方法 <code>match</code> 用于查找字符串，支持正则匹配</li>
</ol>
<p>注：String 也可以当做普通函数使用，这时它的作用是强制转换成字符串数据类型。</p>
<h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p><code>Number</code> 是内置的构造函数，用于创建数值。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 使用构造函数创建数值</span><br>  <span class="hljs-keyword">let</span> x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-string">&#x27;10&#x27;</span>)<br>  <span class="hljs-keyword">let</span> y = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">5</span>)<br><br>  <span class="hljs-comment">// 字面量创建数值</span><br>  <span class="hljs-keyword">let</span> z = <span class="hljs-number">20</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>推荐使用字面量方式声明数值，而不是 <code>Number</code> 构造函数</li>
<li>实例方法 <code>toFixed</code> 用于设置保留小数位的长度</li>
</ol>
]]></content>
      <categories>
        <category>前端知识</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>新用户注册(正则表达式)</title>
    <url>/2023/07/26/js%E6%96%B0%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E5%B0%8F%E6%A1%88%E4%BE%8B-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="js新用户注册小案例-正则表达式"><a href="#js新用户注册小案例-正则表达式" class="headerlink" title="js新用户注册小案例(正则表达式)"></a>js新用户注册小案例(正则表达式)</h1><h3 id="本文是在学习javaScript中Web-APIs板块为更加熟练掌握理解正则表达式的练习小案例"><a href="#本文是在学习javaScript中Web-APIs板块为更加熟练掌握理解正则表达式的练习小案例" class="headerlink" title="本文是在学习javaScript中Web APIs板块为更加熟练掌握理解正则表达式的练习小案例"></a>本文是在学习javaScript中Web APIs板块为更加熟练掌握理解正则表达式的练习小案例</h3><h4 id="网页的业务模块分析"><a href="#网页的业务模块分析" class="headerlink" title="网页的业务模块分析"></a>网页的业务模块分析</h4><ol>
<li>发送验证码模块</li>
<li>各个表单验证模块</li>
<li>勾选已经阅读同意模块</li>
<li>下一步验证模块，只要上面有一个input验证不通过就不同意提交</li>
</ol>
<h4 id="网页效果如下"><a href="#网页效果如下" class="headerlink" title="网页效果如下"></a>网页效果如下</h4><p><img src="/2023/07/26/js%E6%96%B0%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E5%B0%8F%E6%A1%88%E4%BE%8B-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/js%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A1%88%E4%BE%8B%E6%95%88%E6%9E%9C%E5%9B%BE.png"></p>
<h4 id="完整代码实现以及包含的css代码如下，可按需取用"><a href="#完整代码实现以及包含的css代码如下，可按需取用" class="headerlink" title="完整代码实现以及包含的css代码如下，可按需取用"></a>完整代码实现以及包含的css代码如下，可按需取用</h4><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>newUser-registery<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/common.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/register.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://at.alicdn.com/t/font_2143783_iq6z4ey5vu.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-wrapper&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>          <span class="hljs-comment">&lt;!-- 卡片 --&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-card&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>新用户注册<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form&quot;</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-prop</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-zhanghao&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;设置用户名称&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-prop</span>=<span class="hljs-string">&quot;phone&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-shouji&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;phone&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入手机号码  &quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-prop</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-zhibiaozhushibiaozhu&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;短信验证码&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-prop</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-suo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;设置6至20位字母、数字和符号组合&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-prop</span>=<span class="hljs-string">&quot;confirm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-suo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;confirm&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请再次输入上面密码&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item pl50&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-queren&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                已阅读并同意<span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>《用户服务协议》<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;xtx-form-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>下一步<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- &lt;a class=&quot;submit&quot; href=&quot;javascript:;&quot;&gt;下一步&lt;/a&gt; --&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        (<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 1. 发送短信验证码模块</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> code = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.code&#x27;</span>)</span><br><span class="language-javascript">          <span class="hljs-keyword">let</span> flag = <span class="hljs-literal">true</span>  <span class="hljs-comment">// 通过一个变量来控制   节流阀 </span></span><br><span class="language-javascript">          <span class="hljs-comment">//  1.1 点击事件</span></span><br><span class="language-javascript">          code.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (flag) &#123;</span><br><span class="language-javascript">              <span class="hljs-comment">// 取反了，不能马上第二次点击</span></span><br><span class="language-javascript">              flag = <span class="hljs-literal">false</span></span><br><span class="language-javascript">              <span class="hljs-keyword">let</span> i = <span class="hljs-number">5</span></span><br><span class="language-javascript">              <span class="hljs-comment">// 点击完毕之后立马触发</span></span><br><span class="language-javascript">              code.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`0<span class="hljs-subst">$&#123;i&#125;</span>秒后重新获取`</span></span><br><span class="language-javascript">              <span class="hljs-comment">// 开启定时器</span></span><br><span class="language-javascript">              <span class="hljs-keyword">let</span> timerId = <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                i--</span><br><span class="language-javascript">                code.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`0<span class="hljs-subst">$&#123;i&#125;</span>秒后重新获取`</span></span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (i === <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                  <span class="hljs-comment">// 清除定时器</span></span><br><span class="language-javascript">                  <span class="hljs-built_in">clearInterval</span>(timerId)</span><br><span class="language-javascript">                  <span class="hljs-comment">// 从新获取</span></span><br><span class="language-javascript">                  code.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`重新获取`</span></span><br><span class="language-javascript">                  <span class="hljs-comment">// 到时间了，可以开启 flag了</span></span><br><span class="language-javascript">                  flag = <span class="hljs-literal">true</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">              &#125;, <span class="hljs-number">1000</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">          &#125;)</span><br><span class="language-javascript">        &#125;)();</span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 2. 验证的是用户名</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 2.1 获取用户名表单</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> username = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;[name=username]&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">// 2.2 使用change事件  值发生变化的时候</span></span><br><span class="language-javascript">        username.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, verifyName)</span><br><span class="language-javascript">        <span class="hljs-comment">// 2.3 封装verifyName函数</span></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">verifyName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> span = username.<span class="hljs-property">nextElementSibling</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 2.4 定规则  用户名</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^[a-zA-Z0-9-_]&#123;6,10&#125;$/</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!reg.<span class="hljs-title function_">test</span>(username.<span class="hljs-property">value</span>)) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">            span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;输入不合法,请输入6~10位&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 2.5 合法的 就清空span</span></span><br><span class="language-javascript">          span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 3. 验证的是手机号</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 2.1 获取手机表单</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> phone = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;[name=phone]&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">// 2.2 使用change事件  值发生变化的时候</span></span><br><span class="language-javascript">        phone.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, verifyPhone)</span><br><span class="language-javascript">        <span class="hljs-comment">// 2.3 verifyPhone</span></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">verifyPhone</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> span = phone.<span class="hljs-property">nextElementSibling</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 2.4 定规则  用户名</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^1(3\d|4[5-9]|5[0-35-9]|6[567]|7[0-8]|8\d|9[0-35-9])\d&#123;8&#125;$/</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!reg.<span class="hljs-title function_">test</span>(phone.<span class="hljs-property">value</span>)) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">            span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;输入不合法,请输入正确的11位手机号码&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 2.5 合法的 就清空span</span></span><br><span class="language-javascript">          span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 4. 验证的是验证码</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 4.1 获取验证码表单</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> codeInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;[name=code]&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">//4.2 使用change事件  值发生变化的时候</span></span><br><span class="language-javascript">        codeInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, verifyCode)</span><br><span class="language-javascript">        <span class="hljs-comment">// 4.3 verifyPhone</span></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">verifyCode</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> span = codeInput.<span class="hljs-property">nextElementSibling</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 4.4 定规则  验证码</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^\d&#123;6&#125;$/</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!reg.<span class="hljs-title function_">test</span>(codeInput.<span class="hljs-property">value</span>)) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">            span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;输入不合法,6 位数字&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 4.5 合法的 就清空span</span></span><br><span class="language-javascript">          span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 5. 验证的是密码框</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 5.1 获取密码表单</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> password = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;[name=password]&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">//5.2 使用change事件  值发生变化的时候</span></span><br><span class="language-javascript">        password.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, verifyPwd)</span><br><span class="language-javascript">        <span class="hljs-comment">// 5.3 verifyPhone</span></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">verifyPwd</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> span = password.<span class="hljs-property">nextElementSibling</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 5.4 定规则  密码</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^[a-zA-Z0-9-_]&#123;6,20&#125;$/</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!reg.<span class="hljs-title function_">test</span>(password.<span class="hljs-property">value</span>)) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">            span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;输入不合法,6~20位数字字母符号组成&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 5.5 合法的 就清空span</span></span><br><span class="language-javascript">          span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 6. 密码的再次验证</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 6.1 获取再次验证表单</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> confirm = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;[name=confirm]&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">//6.2 使用change事件  值发生变化的时候</span></span><br><span class="language-javascript">        confirm.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, verifyConfirm)</span><br><span class="language-javascript">        <span class="hljs-comment">// 6.3 verifyPhone</span></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">verifyConfirm</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">          <span class="hljs-keyword">const</span> span = confirm.<span class="hljs-property">nextElementSibling</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 6.4 当前表单的值不等于 密码框的值就是错误的</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (confirm.<span class="hljs-property">value</span> !== password.<span class="hljs-property">value</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(11)</span></span><br><span class="language-javascript">            span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;两次密码输入不一致&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 6.5 合法的 就清空span</span></span><br><span class="language-javascript">          span.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 7. 我同意</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> queren = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.icon-queren&#x27;</span>)</span><br><span class="language-javascript">        queren.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 切换类  原来有的就删掉，原来没有就添加</span></span><br><span class="language-javascript">          <span class="hljs-variable language_">this</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">toggle</span>(<span class="hljs-string">&#x27;icon-queren2&#x27;</span>)</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><br><span class="language-javascript">        <span class="hljs-comment">// 8. 提交模块</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> form = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;form&#x27;</span>)</span><br><span class="language-javascript">        form.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 判断是否勾选我同意模块 ，如果有 icon-queren2说明就勾选了，否则没勾选</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!queren.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;icon-queren2&#x27;</span>)) &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;请勾选同意协议&#x27;</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">// 阻止提交</span></span><br><span class="language-javascript">            e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          <span class="hljs-comment">// 依次判断上面的每个框框 是否通过，只要有一个没有通过的就阻止</span></span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(verifyName())</span></span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">verifyName</span>()) e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">verifyPhone</span>()) e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">verifyCode</span>()) e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">verifyPwd</span>()) e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">verifyConfirm</span>()) e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">      </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>

<h4 id="register-css"><a href="#register-css" class="headerlink" title="register.css"></a>register.css</h4><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.xtx-wrapper</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f5f5f5</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-wrapper</span> <span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1240px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">50px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-card</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-card</span> <span class="hljs-selector-tag">h3</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">26px</span>;<br>  <span class="hljs-attribute">font-weight</span>: normal;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">180px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">180px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">460px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">24px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.msg</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff4d4f</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">2px</span>;<br>&#125;<br><br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span><span class="hljs-selector-class">.pl50</span> &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.iconfont</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">13px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">i</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#e4e4e4</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">40px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span><span class="hljs-selector-class">.error</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ff4d4f</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">::placeholder</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cccccc</span> <span class="hljs-meta">!important</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.submit</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.code</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">190px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">text-align</span>: right;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.code</span><span class="hljs-selector-class">.ing</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cccccc</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: space-between;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">720px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">96px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">48px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">48px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span> <span class="hljs-selector-class">.text</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">50%</span>);<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">63px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span> <span class="hljs-selector-class">.step</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#e4e4e4</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ccc</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">46px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">28px</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">23px</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">24px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#e4e4e4</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">100%</span>);<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:first</span>-child<span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:last-child</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-class">.active</span> <span class="hljs-selector-class">.text</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-class">.active</span> <span class="hljs-selector-class">.step</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-class">.active</span><span class="hljs-selector-pseudo">::after</span>, <span class="hljs-selector-class">.xtx-steps</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-class">.active</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">360px</span>;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">80px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">24px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">label</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">text-align</span>: right;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#e4e4e4</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">::placeholder</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cccccc</span> <span class="hljs-meta">!important</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:read-only</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f5f5f5</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.submit</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.captcha</span> &#123;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.captcha</span> <span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">134px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.captcha</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.code</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">310px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-form-label</span> <span class="hljs-selector-class">.xtx-form-item</span> <span class="hljs-selector-class">.code</span><span class="hljs-selector-class">.ing</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cccccc</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-success-box</span> &#123;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">250px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-success-box</span> <span class="hljs-selector-class">.iconfont</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">80px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#1DC779</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-success-box</span> <span class="hljs-selector-class">.tit</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-success-box</span> <span class="hljs-selector-class">.desc</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-success-box</span> <span class="hljs-selector-class">.btn</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br></code></pre></td></tr></table></figure>

<h4 id="common-css"><a href="#common-css" class="headerlink" title="common.css"></a>common.css</h4><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@charset</span> <span class="hljs-string">&quot;UTF-8&quot;</span>;<br><span class="hljs-comment">/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */</span><br><span class="hljs-comment">/* Document</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the line height in all browsers.</span><br><span class="hljs-comment"> * 2. Prevent adjustments of font size after orientation changes in iOS.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.15</span>;<br>  <span class="hljs-comment">/* 1 */</span><br>  -webkit-text-size-adjust: <span class="hljs-number">100%</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/* Sections</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the margin in all browsers.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Render the `main` element consistently in IE.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">main</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Correct the font size and margin on `h1` elements within `section` and</span><br><span class="hljs-comment"> * `article` contexts in Chrome, Firefox, and Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">h1</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2em</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0.67em</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/* Grouping content</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Add the correct box sizing in Firefox.</span><br><span class="hljs-comment"> * 2. Show the overflow in Edge and IE.</span><br><span class="hljs-comment"> */</span><br>hr &#123;<br>  <span class="hljs-attribute">box-sizing</span>: content-box;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">overflow</span>: visible;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span><br><span class="hljs-comment"> * 2. Correct the odd `em` font sizing in all browsers.</span><br><span class="hljs-comment"> */</span><br>pre &#123;<br>  <span class="hljs-attribute">font-family</span>: monospace, monospace;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/* Text-level semantics</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the gray background on active links in IE 10.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: transparent;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Remove the bottom border in Chrome 57-</span><br><span class="hljs-comment"> * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">abbr</span><span class="hljs-selector-attr">[title]</span> &#123;<br>  <span class="hljs-attribute">border-bottom</span>: none;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">text-decoration</span>: underline;<br>  <span class="hljs-comment">/* 2 */</span><br>  <span class="hljs-attribute">text-decoration</span>: underline dotted;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add the correct font weight in Chrome, Edge, and Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">b</span>,<br><span class="hljs-selector-tag">strong</span> &#123;<br>  <span class="hljs-attribute">font-weight</span>: bolder;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span><br><span class="hljs-comment"> * 2. Correct the odd `em` font sizing in all browsers.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">code</span>,<br><span class="hljs-selector-tag">kbd</span>,<br><span class="hljs-selector-tag">samp</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: monospace, monospace;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add the correct font size in all browsers.</span><br><span class="hljs-comment"> */</span><br>small &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">80%</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Prevent `sub` and `sup` elements from affecting the line height in</span><br><span class="hljs-comment"> * all browsers.</span><br><span class="hljs-comment"> */</span><br>sub,<br><span class="hljs-selector-tag">sup</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">75%</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">vertical-align</span>: baseline;<br>&#125;<br><br>sub &#123;<br>  <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">0.25em</span>;<br>&#125;<br><br><span class="hljs-selector-tag">sup</span> &#123;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">0.5em</span>;<br>&#125;<br><br><span class="hljs-comment">/* Embedded content</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the border on images inside links in IE 10.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">border-style</span>: none;<br>&#125;<br><br><span class="hljs-comment">/* Forms</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Change the font styles in all browsers.</span><br><span class="hljs-comment"> * 2. Remove the margin in Firefox and Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>,<br><span class="hljs-selector-tag">input</span>,<br>optgroup,<br>select,<br><span class="hljs-selector-tag">textarea</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: inherit;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.15</span>;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Show the overflow in IE.</span><br><span class="hljs-comment"> * 1. Show the overflow in Edge.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>,<br><span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">overflow</span>: visible;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the inheritance of text transform in Edge, Firefox, and IE.</span><br><span class="hljs-comment"> * 1. Remove the inheritance of text transform in Firefox.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>,<br>select &#123;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">text-transform</span>: none;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Correct the inability to style clickable types in iOS and Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>,<br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;button&quot;</span>]</span>,<br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;reset&quot;</span>]</span>,<br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;submit&quot;</span>]</span> &#123;<br>  -webkit-appearance: button;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the inner border and padding in Firefox.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>::-moz-focus-inner,<br>[type=<span class="hljs-string">&quot;button&quot;</span>]::-moz-focus-inner,<br>[type=<span class="hljs-string">&quot;reset&quot;</span>]::-moz-focus-inner,<br>[type=<span class="hljs-string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;<br>  <span class="hljs-attribute">border-style</span>: none;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Restore the focus styles unset by the previous rule.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">button</span>:-moz-focusring,<br>[type=<span class="hljs-string">&quot;button&quot;</span>]:-moz-focusring,<br>[type=<span class="hljs-string">&quot;reset&quot;</span>]:-moz-focusring,<br>[type=<span class="hljs-string">&quot;submit&quot;</span>]:-moz-focusring &#123;<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> dotted ButtonText;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Correct the padding in Firefox.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">fieldset</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.35em</span> <span class="hljs-number">0.75em</span> <span class="hljs-number">0.625em</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the text wrapping in Edge and IE.</span><br><span class="hljs-comment"> * 2. Correct the color inheritance from `fieldset` elements in IE.</span><br><span class="hljs-comment"> * 3. Remove the padding so developers are not caught out when they zero out</span><br><span class="hljs-comment"> *    `fieldset` elements in all browsers.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">legend</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">color</span>: inherit;<br>  <span class="hljs-comment">/* 2 */</span><br>  <span class="hljs-attribute">display</span>: table;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/* 3 */</span><br>  <span class="hljs-attribute">white-space</span>: normal;<br>  <span class="hljs-comment">/* 1 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add the correct vertical alignment in Chrome, Firefox, and Opera.</span><br><span class="hljs-comment"> */</span><br>progress &#123;<br>  <span class="hljs-attribute">vertical-align</span>: baseline;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the default vertical scrollbar in IE 10+.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">textarea</span> &#123;<br>  <span class="hljs-attribute">overflow</span>: auto;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Add the correct box sizing in IE 10.</span><br><span class="hljs-comment"> * 2. Remove the padding in IE 10.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span>,<br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;radio&quot;</span>]</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Correct the cursor style of increment and decrement buttons in Chrome.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,<br>[type=<span class="hljs-string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;<br>  <span class="hljs-attribute">height</span>: auto;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the odd appearance in Chrome and Safari.</span><br><span class="hljs-comment"> * 2. Correct the outline style in Safari.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;search&quot;</span>]</span> &#123;<br>  -webkit-appearance: textfield;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">outline-offset</span>: -<span class="hljs-number">2px</span>;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Remove the inner padding in Chrome and Safari on macOS.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;search&quot;</span>]</span>::-webkit-search-decoration &#123;<br>  -webkit-appearance: none;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. Correct the inability to style clickable types in iOS and Safari.</span><br><span class="hljs-comment"> * 2. Change font properties to `inherit` in Safari.</span><br><span class="hljs-comment"> */</span><br>::-webkit-file-upload-button &#123;<br>  -webkit-appearance: button;<br>  <span class="hljs-comment">/* 1 */</span><br>  <span class="hljs-attribute">font</span>: inherit;<br>  <span class="hljs-comment">/* 2 */</span><br>&#125;<br><br><span class="hljs-comment">/* Interactive</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Add the correct display in Edge, IE 10+, and Firefox.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">details</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Add the correct display in all browsers.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-tag">summary</span> &#123;<br>  <span class="hljs-attribute">display</span>: list-item;<br>&#125;<br><br><span class="hljs-comment">/* Misc</span><br><span class="hljs-comment">   ========================================================================== */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add the correct display in IE 10+.</span><br><span class="hljs-comment"> */</span><br>template &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add the correct display in IE 10.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-selector-attr">[hidden]</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br>* &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  <span class="hljs-attribute">font</span>: <span class="hljs-number">14px</span>/<span class="hljs-number">1.4</span> <span class="hljs-string">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, <span class="hljs-string">&quot;Microsoft Yahei&quot;</span>, <span class="hljs-string">&quot;Hiragino Sans GB&quot;</span>, <span class="hljs-string">&quot;Heiti SC&quot;</span>, <span class="hljs-string">&quot;WenQuanYi Micro Hei&quot;</span>, sans-serif;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span>, <span class="hljs-selector-tag">h1</span>, <span class="hljs-selector-tag">h3</span>, <span class="hljs-selector-tag">h4</span>, <span class="hljs-selector-tag">p</span>, <span class="hljs-selector-tag">dl</span>, <span class="hljs-selector-tag">dd</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>&#125;<br><br><span class="hljs-selector-tag">i</span> &#123;<br>  <span class="hljs-attribute">font-style</span>: normal;<br>&#125;<br><br><span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">outline</span>: none;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border</span>: none;<br>&#125;<br><br><span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">max-height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> &#123;<br>  <span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot; &quot;</span>;<br>  <span class="hljs-attribute">display</span>: table;<br>&#125;<br><br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">clear</span>: both;<br>&#125;<br><br><span class="hljs-selector-class">.clearfix</span> &#123;<br>  *zoom: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-class">.wrapper</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1240px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.sprites</span> &#123;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/sprites.png</span>);<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">400px</span> <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>&#125;<br><br><span class="hljs-selector-class">.fl</span> &#123;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.fr</span> &#123;<br>  <span class="hljs-attribute">float</span>: right;<br>&#125;<br><br><span class="hljs-selector-class">.tc</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.green</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.red</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#CF4444</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mb10</span> &#123;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.fz20</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.fz18</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.fz16</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-bread</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-number">25px</span> <span class="hljs-number">25px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-bread</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-bread</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-common-btn</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">180px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">48px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#FFFFFF</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-common-btn</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;primary&quot;</span>]</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-common-btn</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;info&quot;</span>]</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#CCCCCC</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">i</span> &#123;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.icon-yixuanze</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.icon-weixuanze</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> ~ <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> ~ <span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.icon-yixuanze</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>&#125;<br><br><span class="hljs-selector-class">.xtx-check</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> ~ <span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.icon-weixuanze</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-comment">/** 顶部导航 **/</span><br><span class="hljs-selector-class">.xtx_topnav</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#333</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">53px</span>;<br>  <span class="hljs-attribute">text-align</span>: right;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">53px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:last-child</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">border-right</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-class">.mobile</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">160px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#666666</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#dcdcdc</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_topnav</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-comment">/** 主导航及Logo **/</span><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.wrapper</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_logo</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">132px</span>;<br>  <span class="hljs-attribute">text-indent</span>: -<span class="hljs-number">999px</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/logo.png</span>);<br>  <span class="hljs-attribute">background-size</span>: contain;<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>  <span class="hljs-attribute">background-position</span>-x: center;<br>  <span class="hljs-attribute">background-position</span>-y: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>: none;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#27BA9B</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">1px</span>;<br>  <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">7px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span>, <span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.active</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:after</span>, <span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_navs</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.active</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">38px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_wrapper</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">175px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">38px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">39px</span>;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#e7e7e7</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">float</span>: right;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_wrapper</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">17px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">17px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/sprites.png</span>);<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">400px</span> <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">80px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_wrapper</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_wrapper</span> <span class="hljs-selector-tag">input</span>::-webkit-input-placeholder &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ccc</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_cart</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">22px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">22px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">8px</span> <span class="hljs-number">12px</span> <span class="hljs-number">0</span> <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">float</span>: right;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">120px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_header</span> <span class="hljs-selector-class">.xtx_search_cart</span> <span class="hljs-selector-tag">i</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">1px</span> <span class="hljs-number">6px</span>;<br>  <span class="hljs-attribute">font-style</span>: normal;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">13px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#E26237</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-comment">/** 公共底部 **/</span><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">60px</span> <span class="hljs-number">0</span> <span class="hljs-number">40px</span> <span class="hljs-number">25px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dl</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">190px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">72px</span>;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f2f2f2</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dl</span><span class="hljs-selector-pseudo">:first</span>-child &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dl</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-attribute">border-right</span>: none;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dt</span> &#123;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dd</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">36px</span> <span class="hljs-number">12px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-tag">dd</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.chat</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.feedback</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weixin</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weibo</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">92px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">92px</span>;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ededed</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.chat</span><span class="hljs-selector-pseudo">:before</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.feedback</span><span class="hljs-selector-pseudo">:before</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weixin</span><span class="hljs-selector-pseudo">:before</span>, <span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weibo</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/sprites.png</span>);<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">400px</span> <span class="hljs-number">400px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.chat</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">245px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.chat</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">200px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.feedback</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">345px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.feedback</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">295px</span> -<span class="hljs-number">70px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weixin</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">247px</span> -<span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weixin</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">202px</span> -<span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weibo</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">347px</span> -<span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.weibo</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">297px</span> -<span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.qrcode</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">92px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">92px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">7px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ededed</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.download</span> &#123;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.download</span> <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.download</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#27BA9B</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.hotline</span> &#123;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">22px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.contact</span> <span class="hljs-selector-class">.hotline</span> small &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.extra</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#333</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">178px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">58px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">60px</span> <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#434343</span>;<br>  <span class="hljs-attribute">text-align</span>: justify;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">58px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">58px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">28px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">58px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">58px</span>;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">float</span>: left;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/sprites.png</span>);<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">400px</span> <span class="hljs-number">400px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> <span class="hljs-selector-class">.price</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> <span class="hljs-selector-class">.express</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">65px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.slogan</span> <span class="hljs-selector-class">.quality</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">130px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.copyright</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">170px</span>;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.copyright</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.copyright</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span>;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xtx_footer</span> <span class="hljs-selector-class">.copyright</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-attribute">border-right</span>: none;<br>&#125;<br><br><span class="hljs-selector-tag">button</span> &#123;<br>  <span class="hljs-attribute">border</span>: none;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS小案例</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业学生就业统计表</title>
    <url>/2023/07/26/%E6%AF%95%E4%B8%9A%E5%AD%A6%E7%94%9F%E5%B0%B1%E4%B8%9A%E7%BB%9F%E8%AE%A1%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="js毕业学生就业统计表小案例"><a href="#js毕业学生就业统计表小案例" class="headerlink" title="js毕业学生就业统计表小案例"></a>js毕业学生就业统计表小案例</h1><h3 id="本文是在学习javaScript中Web-APIs板块中localStorage，事件绑定，事件委托等内容为更加熟练掌握理解相关知识的练习小案例"><a href="#本文是在学习javaScript中Web-APIs板块中localStorage，事件绑定，事件委托等内容为更加熟练掌握理解相关知识的练习小案例" class="headerlink" title="本文是在学习javaScript中Web APIs板块中localStorage，事件绑定，事件委托等内容为更加熟练掌握理解相关知识的练习小案例"></a>本文是在学习javaScript中Web APIs板块中localStorage，事件绑定，事件委托等内容为更加熟练掌握理解相关知识的练习小案例</h3><h4 id="涉及的一些知识分析"><a href="#涉及的一些知识分析" class="headerlink" title="涉及的一些知识分析"></a>涉及的一些知识分析</h4><ul>
<li>render页面利用数组中map+join的方法</li>
<li>render完页面后需要reset表单恢复默认值</li>
<li>将数据存入localStorage确保数据不丢失</li>
<li><em>存储复杂数据类型需要JSON.Stringify()方法将其转化成</em>JSON字符串存储到本地*</li>
</ul>
<h4 id="网页效果如下"><a href="#网页效果如下" class="headerlink" title="网页效果如下"></a>网页效果如下</h4><p><img src="/2023/07/26/%E6%AF%95%E4%B8%9A%E5%AD%A6%E7%94%9F%E5%B0%B1%E4%B8%9A%E7%BB%9F%E8%AE%A1%E8%A1%A8/1.png"></p>
<h4 id="完整代码实现以及包含的css代码如下，可按需取用"><a href="#完整代码实现以及包含的css代码如下，可按需取用" class="headerlink" title="完整代码实现以及包含的css代码如下，可按需取用"></a>完整代码实现以及包含的css代码如下，可按需取用</h4><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>毕业学生就业统计表<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont/iconfont.css&quot;&gt; --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/index.css&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>毕业学生就业统计表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;off&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;姓名&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;年龄&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;salary&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;salary&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;薪资&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;男&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;女&quot;</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;北京&quot;</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;上海&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;广州&quot;</span>&gt;</span>广州<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;西安&quot;</span>&gt;</span>西安<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-tianjia&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>添加<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>共有数据<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>条<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>薪资<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>就业城市<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>录入时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- &lt;tr&gt;</span><br><span class="hljs-comment">        &lt;td&gt;1&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;迪丽热巴&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;23&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;女&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;12000&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;北京&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;2099/9/9 08:08:08&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;</span><br><span class="hljs-comment">          &lt;a href=&quot;javascript:&quot;&gt;</span><br><span class="hljs-comment">            &lt;i class=&quot;iconfont icon-shanchu&quot;&gt;&lt;/i&gt;</span><br><span class="hljs-comment">            删除</span><br><span class="hljs-comment">          &lt;/a&gt;</span><br><span class="hljs-comment">        &lt;/td&gt;</span><br><span class="hljs-comment">      &lt;/tr&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 参考数据</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> initData = [</span><br><span class="language-javascript">      &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">stuId</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;迪丽热巴&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">salary</span>: <span class="hljs-string">&#x27;12000&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;女&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;2099/9/9 08:08:08&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    ]</span><br><span class="language-javascript">    <span class="hljs-comment">// localStorage.setItem(&#x27;data&#x27;, JSON.stringify(initData))</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 1. 渲染业务</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 1.1 先读取本地存储的数据</span></span><br><span class="language-javascript">    <span class="hljs-comment">// (1). 本地存储有数据则记得转换为对象然后存储到变量里面，后期用于渲染页面</span></span><br><span class="language-javascript">    <span class="hljs-comment">// (2). 如果没有数据，则用 空数组来代替</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> arr = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>)) || []</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr)</span><br><span class="language-javascript">    <span class="hljs-comment">// 1.2 利用map和join方法来渲染页面</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> tbody = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;tbody&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-comment">// (1). 利用map遍历数组，返回对应tr的数组</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> trArr = arr.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">ele, index</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">          &lt;tr&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.uname&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.age&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.gender&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.salary&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.city&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.time&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">              &lt;a href=&quot;javascript:&quot; data-id=&quot;<span class="hljs-subst">$&#123;index&#125;</span>&quot;&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;i class=&quot;iconfont icon-shanchu&quot;&gt;&lt;/i&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                删除</span></span><br><span class="hljs-string"><span class="language-javascript">              &lt;/a&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">          &lt;/tr&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">        `</span></span><br><span class="language-javascript">      &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(trArr)</span><br><span class="language-javascript">      <span class="hljs-comment">// (2). 把数组转换为字符串 join</span></span><br><span class="language-javascript">      <span class="hljs-comment">// (3). 把生成的字符串追加给tbody </span></span><br><span class="language-javascript">      tbody.<span class="hljs-property">innerHTML</span> = trArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="language-javascript">      <span class="hljs-comment">// 显示共计有几条数据</span></span><br><span class="language-javascript">      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.title span&#x27;</span>).<span class="hljs-property">innerHTML</span> = arr.<span class="hljs-property">length</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 2. 新增业务</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> info = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.info&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> uname = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.uname&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> age = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.age&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> salary = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.salary&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> gender = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.gender&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> city = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.city&#x27;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 2.1 form表单注册提交事件，阻止默认行为</span></span><br><span class="language-javascript">    info.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">      e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.2 非空判断</span></span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (!uname.<span class="hljs-property">value</span> || !age.<span class="hljs-property">value</span> || !salary.<span class="hljs-property">value</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;输入内容不能为空&#x27;</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.3 给 arr 数组追加对象，里面存储 表单获取过来的数据</span></span><br><span class="language-javascript">      arr.<span class="hljs-title function_">push</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 处理 stuId：数组最后一条数据的stuId + 1      </span></span><br><span class="language-javascript">        <span class="hljs-attr">stuId</span>: arr.<span class="hljs-property">length</span> ? arr[arr.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>].<span class="hljs-property">stuId</span> + <span class="hljs-number">1</span> : <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">uname</span>: uname.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">age</span>: age.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">salary</span>: salary.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">gender</span>: gender.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">city</span>: city.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">time</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">toLocaleString</span>()</span><br><span class="language-javascript">      &#125;)</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.4 渲染页面和重置表单（reset()方法）</span></span><br><span class="language-javascript">      <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>() <span class="hljs-comment">// 重置表单</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-comment">// 2.5 把数组重新存入本地存储里面，记得转换为JSON字符串存储</span></span><br><span class="language-javascript">      <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(arr))</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 3. 删除业务</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 3.1 采用事件委托形式，给 tbody 注册点击事件</span></span><br><span class="language-javascript">    tbody.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-comment">// 判断是否点击的是删除按钮  A 链接</span></span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (e.<span class="hljs-property">target</span>.<span class="hljs-property">tagName</span> === <span class="hljs-string">&#x27;A&#x27;</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// alert(11)</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 3.2 得到当前点击链接的索引号。渲染数据的时候，动态给a链接添加自定义属性例如 data-id=&quot;0&quot;</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">id</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 确认框 确认是否要真的删除</span></span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;您确定要删除这条数据吗？&#x27;</span>)) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.3 根据索引号，利用 splice 删除数组这条数据</span></span><br><span class="language-javascript">          arr.<span class="hljs-title function_">splice</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">id</span>, <span class="hljs-number">1</span>)</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.4 重新渲染页面 </span></span><br><span class="language-javascript">          <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.5 把最新 arr 数组存入本地存储</span></span><br><span class="language-javascript">          <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(arr))</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>

<h4 id="index-css"><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h4><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">* &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#721c24</span>;<br>&#125;<br><br><span class="hljs-selector-tag">h1</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><span class="hljs-selector-class">.title</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">933px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ebebeb</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> auto;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f2f2f2</span>;<br>  <span class="hljs-attribute">text-align</span>: right;<br>&#125;<br><br><span class="hljs-selector-class">.title</span> <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">margin</span>: -<span class="hljs-number">3px</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#f26934</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>&#125;<br><br><span class="hljs-selector-tag">table</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">950px</span>;<br>  <span class="hljs-attribute">border-collapse</span>: collapse;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#3c3637</span>;<br>&#125;<br><br><span class="hljs-selector-tag">th</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f2f2f2</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>  <span class="hljs-attribute">text-align</span>: left;<br>&#125;<br><br><span class="hljs-selector-tag">td</span>,<br><span class="hljs-selector-tag">th</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ebebeb</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> &#123;<br><br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><br>&#125;<br><br><span class="hljs-selector-tag">tbody</span> <span class="hljs-selector-tag">tr</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-selector-tag">tbody</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fbfafa</span>;<br>&#125;<br><br><span class="hljs-selector-tag">tbody</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">80px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f26934</span>;<br>&#125;<br><br><span class="hljs-selector-class">.info</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">900px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>  <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">input</span>,<br><span class="hljs-selector-class">.info</span> select &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">outline</span>: none;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ebebeb</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">button</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#5dbfd8</span>;<br>  <span class="hljs-attribute">outline</span>: none;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#52abc1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>



<h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
      <categories>
        <category>JS小案例</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
</search>
